name: Django CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify installation
      run: |
        python --version
        python -c "import django; print(f'Django version: {django.__version__}')"
    
    - name: Run migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate
    
    - name: Run Django tests
      run: |
        python manage.py test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup SSH key
      run: |
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É SSH
        mkdir -p ~/.ssh
        echo "SSH folder created"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º SSH –∫–ª—é—á –ü–†–ê–í–ò–õ–¨–ù–´–ú —Å–ø–æ—Å–æ–±–æ–º
        # SSH_KEY="${{ vars.SSH_PRIVATE_KEY }}"
        echo "${{ vars.SSH_PRIVATE_KEY }}" | base64 -d > ~/.ssh/id_ed25519
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞
        chmod 700 ~/.ssh
        chmod 600 ~/.ssh/id_ed25519
        echo "SSH key saved and permissions set"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ö–æ—Å—Ç –≤ known_hosts
        ssh-keyscan -H ${{ vars.SERVER_HOST }} >> ~/.ssh/known_hosts 2>/dev/null
        echo "Server added to known hosts"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω
        echo "=== SSH Key Verification ==="
        ls -la ~/.ssh/
        echo "Key begins with: $(head -1 ~/.ssh/id_ed25519)"
        echo "Key ends with: $(tail -1 ~/.ssh/id_ed25519)"
    
    - name: Test SSH connection
      run: |
        echo "Testing SSH connection..."
        if ssh -i ~/.ssh/id_ed25519 -o ConnectTimeout=10 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "echo '‚úÖ SSH connection successful!'"; then
          echo "SSH test passed"
        else
          echo "SSH test failed"
          exit 1
        fi
    
    - name: Create deployment directory
      run: |
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "mkdir -p ${{ vars.DEPLOY_PATH }}"
        echo "Deployment directory created"
    
    - name: Copy files to server
      run: |
        echo "Copying files to server..."
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º rsync –≤–º–µ—Å—Ç–æ scp –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        rsync -avz -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no" \
          --exclude '.git' \
          --exclude '.github' \
          --exclude '.gitignore' \
          ./ ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }}:${{ vars.DEPLOY_PATH }}/
        echo "Files copied successfully"
    
    - name: Install dependencies on server
      run: |
        echo "Installing dependencies..."
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "
          cd ${{ vars.DEPLOY_PATH }}
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
          echo 'Dependencies installed'
        "
    
    - name: Run migrations
      run: |
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "
          cd ${{ vars.DEPLOY_PATH }}
          python3 manage.py makemigrations
          python3 manage.py migrate
          echo 'Migrations completed'
        "
    
    - name: Final check
      run: |
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "
          cd ${{ vars.DEPLOY_PATH }}
          echo '=== Deployment Verification ==='
          ls -la
          python3 manage.py check
          echo 'üéâ DEPLOYMENT SUCCESSFUL!'
          echo 'App ready at: http://${{ vars.SERVER_HOST }}:8000'
        "