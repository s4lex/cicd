name: Django CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate
    
    - name: Run tests
      run: |
        python test_runner.py
    
    - name: Run with pytest (alternative)
      run: |
        pip install pytest pytest-django
        pytest myapp/tests.py -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate
    
    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput
    
    - name: Deploy to production
      run: |
        echo "Deploying to production server..."
        # Здесь будут команды для деплоя на ваш сервер
        # Например: rsync, scp, или команды для вашего хостинга
        echo "Deployment completed successfully!"