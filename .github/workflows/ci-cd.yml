name: Django CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify installation
      run: |
        python --version
        python -c "import django; print(f'Django version: {django.__version__}')"
        python -c "import pytest; print(f'pytest version: {pytest.__version__}')"
    
    - name: Run migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate
    
    - name: Run Django tests
      run: |
        python manage.py test
    
    - name: Run custom test runner
      run: |
        python test_runner.py

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "SSH folder created"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º SSH –∫–ª—é—á
        cat << 'EOF' > ~/.ssh/id_ed25519
        ${{ vars.SSH_PRIVATE_KEY }}
        EOF
        
        chmod 600 ~/.ssh/id_ed25519
        echo "SSH key saved and permissions set"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ö–æ—Å—Ç –≤ known_hosts
        ssh-keyscan -H ${{ vars.SERVER_HOST }} >> ~/.ssh/known_hosts 2>/dev/null
        echo "Server added to known hosts"
    
    - name: Verify SSH setup
      run: |
        echo "=== SSH Setup Verification ==="
        ls -la ~/.ssh/
        echo "Key file size: $(wc -c < ~/.ssh/id_ed25519) bytes"
        echo "SSH key first line: $(head -1 ~/.ssh/id_ed25519)"
    
    - name: Test SSH connection
      run: |
        echo "Testing SSH connection to server..."
        ssh -i ~/.ssh/id_ed25519 -o ConnectTimeout=10 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "echo '‚úÖ SSH connection successful!'"
    
    - name: Create deployment directory
      run: |
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "mkdir -p ${{ vars.DEPLOY_PATH }}"
        echo "Deployment directory created: ${{ vars.DEPLOY_PATH }}"
    
    - name: Copy files to server
      run: |
        echo "Copying files to server..."
        scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -r \
          --exclude '.git' \
          --exclude '.github' \
          --exclude '.gitignore' \
          ./* ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }}:${{ vars.DEPLOY_PATH }}/
        echo "Files copied successfully"
    
    - name: Install dependencies on server
      run: |
        echo "Installing dependencies on server..."
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "
          cd ${{ vars.DEPLOY_PATH }}
          echo 'Current directory: $(pwd)'
          echo 'Files in directory:'
          ls -la
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
          echo '‚úÖ Dependencies installed successfully'
        "
    
    - name: Run migrations on server
      run: |
        echo "Running migrations on server..."
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "
          cd ${{ vars.DEPLOY_PATH }}
          python3 manage.py makemigrations
          python3 manage.py migrate
          echo '‚úÖ Migrations completed successfully'
        "
    
    - name: Health check
      run: |
        echo "Running health check..."
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "
          cd ${{ vars.DEPLOY_PATH }}
          python3 manage.py check
          echo '‚úÖ Health check passed!'
          echo 'üöÄ Deployment completed successfully!'
          echo 'üåê Application ready at: http://${{ vars.SERVER_HOST }}:8000'
          echo 'üìÅ Deployment path: ${{ vars.DEPLOY_PATH }}'
        "
    
    - name: Final verification
      run: |
        echo "=== Final Verification ==="
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_HOST }} "
          cd ${{ vars.DEPLOY_PATH }}
          echo 'Files in deployment directory:'
          ls -la
          echo 'Python version:'
          python3 --version
          echo 'Django version:'
          python3 -c \"import django; print(django.__version__)\"
        "